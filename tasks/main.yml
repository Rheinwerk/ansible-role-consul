---
# vim: set ft=ansible:

- name: Install Consul
  ansible.builtin.unarchive:
    remote_src: true
    src: "{{ item }}"
    dest: /usr/local/bin
  with_items:
    - "{{ _consul.download.consul_url }}"

- name: Create consul group
  ansible.builtin.group:
    name: consul
    state: present
    system: true

- name: Create consul user
  ansible.builtin.user:
    name: consul
    state: present
    system: true
    group: consul
    createhome: false
    home: /tmp
    shell: /usr/sbin/nologin

- name: Create Consul Config Directory
  ansible.builtin.file:
    name: "{{ _consul.config_dir }}"
    state: directory
    owner: root
    group: consul
    mode: "0755"

- name: Create Consul systemd Script
  ansible.builtin.template:
    src: etc/systemd/system/consul.service.j2
    dest: /etc/systemd/system/{{ _consul.service_name }}.service
    owner: root
    group: root
    mode: "0644"

- name: Create Consul Logrotate Configuration
  ansible.builtin.template:
    src: etc/logrotate.d/consul.j2
    dest: /etc/logrotate.d/consul
    owner: root
    group: root
    mode: "0644"

- name: Disable services autostart
  ansible.builtin.service:
    name: "{{ item }}"
    enabled: false
  loop:
    - "{{ _consul.service_name }}"

- name: Get package facts
  ansible.builtin.package_facts:
    manager: auto
  when: _consul.use_dns_forwarding | default(false)
  no_log: true

- name: Systemd-resolved forwarding
  when: _consul.use_dns_forwarding | default(false) and 'systemd-resolved' in ansible_facts.packages
  block:
    - name: Create /etc/systemd/resolved.conf.d/
      ansible.builtin.file:
        path: /etc/systemd/resolved.conf.d/
        state: directory
        owner: root
        group: root

    - name: Create systemd-resolved config to forward consul domain to agent
      ansible.builtin.template:
        src: "{{ item }}.j2"
        dest: /{{ item }}
        mode: "0644"
      loop:
        - etc/systemd/resolved.conf.d/consul.conf
      register: systemd_resolved_consul

    - name: Restart systemd-resolved
      ansible.builtin.systemd:
        name: systemd-resolved
        state: restarted
      when: systemd_resolved_consul is changed
